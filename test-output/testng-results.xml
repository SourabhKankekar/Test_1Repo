<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="2" total="12" passed="6" failed="2" skipped="2">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-06-21T23:02:57 IST" name="Suite" finished-at="2022-06-21T23:03:27 IST" duration-ms="29627">
    <groups>
    </groups>
    <test started-at="2022-06-21T23:02:57 IST" name="Test_Chrome" finished-at="2022-06-21T23:03:10 IST" duration-ms="12394">
      <class name="TestNG.Test_3">
        <test-method is-config="true" signature="BM(java.lang.String)[pri:0, instance:TestNG.Test_3@7334aada]" started-at="2022-06-21T23:02:57 IST" name="BM" finished-at="2022-06-21T23:03:02 IST" duration-ms="4470" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BM -->
        <test-method signature="test_2()[pri:0, instance:TestNG.Test_3@7334aada]" started-at="2022-06-21T23:03:02 IST" name="test_2" finished-at="2022-06-21T23:03:02 IST" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method is-config="true" signature="AM()[pri:0, instance:TestNG.Test_3@7334aada]" started-at="2022-06-21T23:03:02 IST" name="AM" finished-at="2022-06-21T23:03:02 IST" duration-ms="255" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AM -->
        <test-method is-config="true" signature="BM(java.lang.String)[pri:0, instance:TestNG.Test_3@7334aada]" started-at="2022-06-21T23:03:02 IST" name="BM" finished-at="2022-06-21T23:03:05 IST" duration-ms="2574" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BM -->
        <test-method signature="test_2()[pri:0, instance:TestNG.Test_3@7334aada]" started-at="2022-06-21T23:03:05 IST" name="test_2" finished-at="2022-06-21T23:03:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method is-config="true" signature="AM()[pri:0, instance:TestNG.Test_3@7334aada]" started-at="2022-06-21T23:03:05 IST" name="AM" finished-at="2022-06-21T23:03:05 IST" duration-ms="242" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AM -->
        <test-method is-config="true" signature="BM(java.lang.String)[pri:0, instance:TestNG.Test_3@7334aada]" started-at="2022-06-21T23:03:05 IST" name="BM" finished-at="2022-06-21T23:03:06 IST" duration-ms="1274" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BM -->
        <test-method signature="test_2()[pri:0, instance:TestNG.Test_3@7334aada]" started-at="2022-06-21T23:03:06 IST" name="test_2" finished-at="2022-06-21T23:03:06 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method is-config="true" signature="AM()[pri:0, instance:TestNG.Test_3@7334aada]" started-at="2022-06-21T23:03:06 IST" name="AM" finished-at="2022-06-21T23:03:06 IST" duration-ms="243" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AM -->
        <test-method is-config="true" signature="BM(java.lang.String)[pri:0, instance:TestNG.Test_3@7334aada]" started-at="2022-06-21T23:03:06 IST" name="BM" finished-at="2022-06-21T23:03:09 IST" duration-ms="3026" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BM -->
        <test-method signature="test_3()[pri:2, instance:TestNG.Test_3@7334aada]" started-at="2022-06-21T23:03:09 IST" name="test_3" finished-at="2022-06-21T23:03:09 IST" duration-ms="3" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at TestNG.Test_3.test_3(Test_3.java:43)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_3 -->
        <test-method is-config="true" signature="AM()[pri:0, instance:TestNG.Test_3@7334aada]" started-at="2022-06-21T23:03:09 IST" name="AM" finished-at="2022-06-21T23:03:10 IST" duration-ms="245" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AM -->
        <test-method signature="test_4()[pri:3, instance:TestNG.Test_3@7334aada]" started-at="2022-06-21T23:03:10 IST" name="test_4" finished-at="2022-06-21T23:03:10 IST" depends-on-methods="TestNG.Test_3.test_3" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method Test_3.test_4()[pri:3, instance:TestNG.Test_3@7334aada] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method Test_3.test_4()[pri:3, instance:TestNG.Test_3@7334aada] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:102)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_4 -->
      </class> <!-- TestNG.Test_3 -->
    </test> <!-- Test_Chrome -->
    <test started-at="2022-06-21T23:03:10 IST" name="Test_Edge" finished-at="2022-06-21T23:03:27 IST" duration-ms="17214">
      <class name="TestNG.Test_3">
        <test-method is-config="true" signature="BM(java.lang.String)[pri:0, instance:TestNG.Test_3@1bd4fdd]" started-at="2022-06-21T23:03:10 IST" name="BM" finished-at="2022-06-21T23:03:18 IST" duration-ms="8755" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BM -->
        <test-method signature="test_2()[pri:0, instance:TestNG.Test_3@1bd4fdd]" started-at="2022-06-21T23:03:18 IST" name="test_2" finished-at="2022-06-21T23:03:18 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method is-config="true" signature="AM()[pri:0, instance:TestNG.Test_3@1bd4fdd]" started-at="2022-06-21T23:03:18 IST" name="AM" finished-at="2022-06-21T23:03:19 IST" duration-ms="288" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AM -->
        <test-method is-config="true" signature="BM(java.lang.String)[pri:0, instance:TestNG.Test_3@1bd4fdd]" started-at="2022-06-21T23:03:19 IST" name="BM" finished-at="2022-06-21T23:03:21 IST" duration-ms="2402" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BM -->
        <test-method signature="test_2()[pri:0, instance:TestNG.Test_3@1bd4fdd]" started-at="2022-06-21T23:03:21 IST" name="test_2" finished-at="2022-06-21T23:03:21 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method is-config="true" signature="AM()[pri:0, instance:TestNG.Test_3@1bd4fdd]" started-at="2022-06-21T23:03:21 IST" name="AM" finished-at="2022-06-21T23:03:21 IST" duration-ms="248" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AM -->
        <test-method is-config="true" signature="BM(java.lang.String)[pri:0, instance:TestNG.Test_3@1bd4fdd]" started-at="2022-06-21T23:03:21 IST" name="BM" finished-at="2022-06-21T23:03:24 IST" duration-ms="2778" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BM -->
        <test-method signature="test_2()[pri:0, instance:TestNG.Test_3@1bd4fdd]" started-at="2022-06-21T23:03:24 IST" name="test_2" finished-at="2022-06-21T23:03:24 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_2 -->
        <test-method is-config="true" signature="AM()[pri:0, instance:TestNG.Test_3@1bd4fdd]" started-at="2022-06-21T23:03:24 IST" name="AM" finished-at="2022-06-21T23:03:24 IST" duration-ms="252" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AM -->
        <test-method is-config="true" signature="BM(java.lang.String)[pri:0, instance:TestNG.Test_3@1bd4fdd]" started-at="2022-06-21T23:03:24 IST" name="BM" finished-at="2022-06-21T23:03:27 IST" duration-ms="2238" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BM -->
        <test-method signature="test_3()[pri:2, instance:TestNG.Test_3@1bd4fdd]" started-at="2022-06-21T23:03:27 IST" name="test_3" finished-at="2022-06-21T23:03:27 IST" duration-ms="1" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at TestNG.Test_3.test_3(Test_3.java:43)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_3 -->
        <test-method is-config="true" signature="AM()[pri:0, instance:TestNG.Test_3@1bd4fdd]" started-at="2022-06-21T23:03:27 IST" name="AM" finished-at="2022-06-21T23:03:27 IST" duration-ms="235" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AM -->
        <test-method signature="test_4()[pri:3, instance:TestNG.Test_3@1bd4fdd]" started-at="2022-06-21T23:03:27 IST" name="test_4" finished-at="2022-06-21T23:03:27 IST" depends-on-methods="TestNG.Test_3.test_3" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method Test_3.test_4()[pri:3, instance:TestNG.Test_3@1bd4fdd] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method Test_3.test_4()[pri:3, instance:TestNG.Test_3@1bd4fdd] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:102)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_4 -->
      </class> <!-- TestNG.Test_3 -->
    </test> <!-- Test_Edge -->
  </suite> <!-- Suite -->
</testng-results>
